
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'uql_queryALL AND AS AVG BY COMPARE_OPERATOR COUNT DESC FLOAT FROM GROUP INTEGER LEFT_PARENTHESIS LIMIT NL_LITERAL OR ORDER RIGHT_PARENTHESIS SELECT SEPARATOR SUM TABLE_URL TO VAR_NAME WHERE\n    uql_query : select_clause from_clause\n              | select_clause from_clause optional_clause_combo\n    select_clause : SELECT select_expression\n    select_expression : select_expression SEPARATOR select_literal\n                      | select_literal\n    \n    select_literal : ALL\n                   | variable_literal\n                   | nl_literal\n                   | aggregation\n                   | INTEGER\n    \n    aggregation : agg_op LEFT_PARENTHESIS VAR_NAME RIGHT_PARENTHESIS\n                | agg_op LEFT_PARENTHESIS ALL RIGHT_PARENTHESIS\n                | agg_op LEFT_PARENTHESIS VAR_NAME RIGHT_PARENTHESIS AS VAR_NAME\n                | agg_op LEFT_PARENTHESIS ALL RIGHT_PARENTHESIS AS VAR_NAME\n    \n    agg_op : AVG\n           | COUNT\n           | SUM\n    \n    variable_literal : VAR_NAME\n                     | VAR_NAME AS VAR_NAME\n    \n    nl_literal : NL_LITERAL\n               | NL_LITERAL AS VAR_NAME\n    from_clause : FROM VAR_NAME\n    optional_clause_combo : optional_clause_combo optional_clause\n                          | optional_clause\n    \n    optional_clause : limit_clause\n                    | to_clause\n                    | where_clause\n                    | group_by_clause\n                    | order_by_clause\n    limit_clause : LIMIT INTEGERto_clause : TO VAR_NAMEwhere_clause : WHERE where_expression\n    where_expression : where_expression AND predicate\n                     | where_expression OR predicate\n                     | predicate\n    group_by_clause : GROUP BY group_by_expression\n    group_by_expression : group_by_expression SEPARATOR group_by_literal\n                        | group_by_literal\n    \n    group_by_literal : variable_literal\n                    | nl_literal\n    \n    order_by_clause : ORDER BY order_by_expression\n                    | ORDER BY order_by_expression DESC\n    \n    order_by_expression : order_by_expression SEPARATOR order_by_literal\n                        | order_by_literal\n    \n    order_by_literal : VAR_NAME\n                     | NL_LITERAL\n                     | INTEGER\n    \n    predicate : NL_LITERAL\n              | VAR_NAME COMPARE_OPERATOR NL_LITERAL\n              | VAR_NAME COMPARE_OPERATOR INTEGER\n    '
    
_lr_action_items = {'SELECT':([0,],[3,]),'$end':([1,4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[0,-1,-18,-20,-2,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'FROM':([2,6,7,8,9,10,11,12,13,14,45,46,47,62,63,75,76,],[5,-3,-5,-6,-7,-8,-9,-10,-18,-20,-4,-19,-21,-11,-12,-13,-14,]),'ALL':([3,32,35,],[8,8,49,]),'INTEGER':([3,26,32,44,52,70,],[12,37,12,61,67,61,]),'VAR_NAME':([3,5,27,28,32,33,34,35,43,44,50,51,68,70,71,72,],[13,31,38,42,13,46,47,48,13,59,42,42,13,59,75,76,]),'NL_LITERAL':([3,28,32,43,44,50,51,52,68,70,],[14,41,14,14,60,41,41,66,14,60,]),'AVG':([3,32,],[16,16,]),'COUNT':([3,32,],[17,17,]),'SUM':([3,32,],[18,18,]),'LIMIT':([4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[26,-18,-20,26,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'TO':([4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[27,-18,-20,27,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'WHERE':([4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[28,-18,-20,28,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'GROUP':([4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[29,-18,-20,29,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'ORDER':([4,13,14,19,20,21,22,23,24,25,31,36,37,38,39,40,41,46,47,53,54,55,56,57,58,59,60,61,64,65,66,67,69,73,74,],[30,-18,-20,30,-24,-25,-26,-27,-28,-29,-22,-23,-30,-31,-32,-35,-48,-19,-21,-36,-38,-39,-40,-41,-44,-45,-46,-47,-33,-34,-49,-50,-42,-37,-43,]),'SEPARATOR':([6,7,8,9,10,11,12,13,14,45,46,47,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,],[32,-5,-6,-7,-8,-9,-10,-18,-20,-4,-19,-21,68,-38,-39,-40,70,-44,-45,-46,-47,-11,-12,-37,-43,-13,-14,]),'AS':([13,14,62,63,],[33,34,71,72,]),'LEFT_PARENTHESIS':([15,16,17,18,],[35,-15,-16,-17,]),'BY':([29,30,],[43,44,]),'AND':([39,40,41,64,65,66,67,],[50,-35,-48,-33,-34,-49,-50,]),'OR':([39,40,41,64,65,66,67,],[51,-35,-48,-33,-34,-49,-50,]),'COMPARE_OPERATOR':([42,],[52,]),'RIGHT_PARENTHESIS':([48,49,],[62,63,]),'DESC':([57,58,59,60,61,74,],[69,-44,-45,-46,-47,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'uql_query':([0,],[1,]),'select_clause':([0,],[2,]),'from_clause':([2,],[4,]),'select_expression':([3,],[6,]),'select_literal':([3,32,],[7,45,]),'variable_literal':([3,32,43,68,],[9,9,55,55,]),'nl_literal':([3,32,43,68,],[10,10,56,56,]),'aggregation':([3,32,],[11,11,]),'agg_op':([3,32,],[15,15,]),'optional_clause_combo':([4,],[19,]),'optional_clause':([4,19,],[20,36,]),'limit_clause':([4,19,],[21,21,]),'to_clause':([4,19,],[22,22,]),'where_clause':([4,19,],[23,23,]),'group_by_clause':([4,19,],[24,24,]),'order_by_clause':([4,19,],[25,25,]),'where_expression':([28,],[39,]),'predicate':([28,50,51,],[40,64,65,]),'group_by_expression':([43,],[53,]),'group_by_literal':([43,68,],[54,73,]),'order_by_expression':([44,],[57,]),'order_by_literal':([44,70,],[58,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> uql_query","S'",1,None,None,None),
  ('uql_query -> select_clause from_clause','uql_query',2,'p_uql_query','tokenizer_parser.py',56),
  ('uql_query -> select_clause from_clause optional_clause_combo','uql_query',3,'p_uql_query','tokenizer_parser.py',57),
  ('select_clause -> SELECT select_expression','select_clause',2,'p_select_clause','tokenizer_parser.py',106),
  ('select_expression -> select_expression SEPARATOR select_literal','select_expression',3,'p_select_expression','tokenizer_parser.py',112),
  ('select_expression -> select_literal','select_expression',1,'p_select_expression','tokenizer_parser.py',113),
  ('select_literal -> ALL','select_literal',1,'p_select_literal','tokenizer_parser.py',122),
  ('select_literal -> variable_literal','select_literal',1,'p_select_literal','tokenizer_parser.py',123),
  ('select_literal -> nl_literal','select_literal',1,'p_select_literal','tokenizer_parser.py',124),
  ('select_literal -> aggregation','select_literal',1,'p_select_literal','tokenizer_parser.py',125),
  ('select_literal -> INTEGER','select_literal',1,'p_select_literal','tokenizer_parser.py',126),
  ('aggregation -> agg_op LEFT_PARENTHESIS VAR_NAME RIGHT_PARENTHESIS','aggregation',4,'p_aggregation','tokenizer_parser.py',133),
  ('aggregation -> agg_op LEFT_PARENTHESIS ALL RIGHT_PARENTHESIS','aggregation',4,'p_aggregation','tokenizer_parser.py',134),
  ('aggregation -> agg_op LEFT_PARENTHESIS VAR_NAME RIGHT_PARENTHESIS AS VAR_NAME','aggregation',6,'p_aggregation','tokenizer_parser.py',135),
  ('aggregation -> agg_op LEFT_PARENTHESIS ALL RIGHT_PARENTHESIS AS VAR_NAME','aggregation',6,'p_aggregation','tokenizer_parser.py',136),
  ('agg_op -> AVG','agg_op',1,'p_agg_op','tokenizer_parser.py',148),
  ('agg_op -> COUNT','agg_op',1,'p_agg_op','tokenizer_parser.py',149),
  ('agg_op -> SUM','agg_op',1,'p_agg_op','tokenizer_parser.py',150),
  ('variable_literal -> VAR_NAME','variable_literal',1,'p_variable_literal','tokenizer_parser.py',156),
  ('variable_literal -> VAR_NAME AS VAR_NAME','variable_literal',3,'p_variable_literal','tokenizer_parser.py',157),
  ('nl_literal -> NL_LITERAL','nl_literal',1,'p_nl_literal','tokenizer_parser.py',166),
  ('nl_literal -> NL_LITERAL AS VAR_NAME','nl_literal',3,'p_nl_literal','tokenizer_parser.py',167),
  ('from_clause -> FROM VAR_NAME','from_clause',2,'p_from_clause','tokenizer_parser.py',176),
  ('optional_clause_combo -> optional_clause_combo optional_clause','optional_clause_combo',2,'p_optional_clause_combo','tokenizer_parser.py',183),
  ('optional_clause_combo -> optional_clause','optional_clause_combo',1,'p_optional_clause_combo','tokenizer_parser.py',184),
  ('optional_clause -> limit_clause','optional_clause',1,'p_optional_clause','tokenizer_parser.py',193),
  ('optional_clause -> to_clause','optional_clause',1,'p_optional_clause','tokenizer_parser.py',194),
  ('optional_clause -> where_clause','optional_clause',1,'p_optional_clause','tokenizer_parser.py',195),
  ('optional_clause -> group_by_clause','optional_clause',1,'p_optional_clause','tokenizer_parser.py',196),
  ('optional_clause -> order_by_clause','optional_clause',1,'p_optional_clause','tokenizer_parser.py',197),
  ('limit_clause -> LIMIT INTEGER','limit_clause',2,'p_limit_clause','tokenizer_parser.py',202),
  ('to_clause -> TO VAR_NAME','to_clause',2,'p_to_clause','tokenizer_parser.py',206),
  ('where_clause -> WHERE where_expression','where_clause',2,'p_where_clause','tokenizer_parser.py',210),
  ('where_expression -> where_expression AND predicate','where_expression',3,'p_where_expression','tokenizer_parser.py',216),
  ('where_expression -> where_expression OR predicate','where_expression',3,'p_where_expression','tokenizer_parser.py',217),
  ('where_expression -> predicate','where_expression',1,'p_where_expression','tokenizer_parser.py',218),
  ('group_by_clause -> GROUP BY group_by_expression','group_by_clause',3,'p_group_by_clause','tokenizer_parser.py',230),
  ('group_by_expression -> group_by_expression SEPARATOR group_by_literal','group_by_expression',3,'p_group_by_expression','tokenizer_parser.py',261),
  ('group_by_expression -> group_by_literal','group_by_expression',1,'p_group_by_expression','tokenizer_parser.py',262),
  ('group_by_literal -> variable_literal','group_by_literal',1,'p_group_by_literal','tokenizer_parser.py',271),
  ('group_by_literal -> nl_literal','group_by_literal',1,'p_group_by_literal','tokenizer_parser.py',272),
  ('order_by_clause -> ORDER BY order_by_expression','order_by_clause',3,'p_order_by_clause','tokenizer_parser.py',278),
  ('order_by_clause -> ORDER BY order_by_expression DESC','order_by_clause',4,'p_order_by_clause','tokenizer_parser.py',279),
  ('order_by_expression -> order_by_expression SEPARATOR order_by_literal','order_by_expression',3,'p_order_by_expression','tokenizer_parser.py',289),
  ('order_by_expression -> order_by_literal','order_by_expression',1,'p_order_by_expression','tokenizer_parser.py',290),
  ('order_by_literal -> VAR_NAME','order_by_literal',1,'p_order_by_literal','tokenizer_parser.py',299),
  ('order_by_literal -> NL_LITERAL','order_by_literal',1,'p_order_by_literal','tokenizer_parser.py',300),
  ('order_by_literal -> INTEGER','order_by_literal',1,'p_order_by_literal','tokenizer_parser.py',301),
  ('predicate -> NL_LITERAL','predicate',1,'p_predicate','tokenizer_parser.py',307),
  ('predicate -> VAR_NAME COMPARE_OPERATOR NL_LITERAL','predicate',3,'p_predicate','tokenizer_parser.py',308),
  ('predicate -> VAR_NAME COMPARE_OPERATOR INTEGER','predicate',3,'p_predicate','tokenizer_parser.py',309),
]
